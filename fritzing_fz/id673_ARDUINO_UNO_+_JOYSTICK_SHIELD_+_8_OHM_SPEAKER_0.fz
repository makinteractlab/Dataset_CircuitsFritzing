<?xml version="1.0" encoding="UTF-8"?>
<module fritzingVersion="0.7.5b.07.02.6130">
    <views>
        <view name="breadboardView" backgroundColor="#cccccc" gridSize="0.1in" showGrid="1" alignToGrid="1"/>
        <view name="schematicView" backgroundColor="#f2f2f2" gridSize="0.295276in" showGrid="1" alignToGrid="1"/>
        <view name="pcbView" backgroundColor="#a0a8b3" gridSize="0.1in" showGrid="1" alignToGrid="1"/>
    </views>
    <instances>
        <instance moduleIdRef="TwoLayerRectanglePCBModuleID" modelIndex="9163" path=":/resources/parts/core/rectangle_pcb_two_layers.fzp">
            <property name="layers" value="2"/>
            <property name="width" value="169.333333333333"/>
            <property name="height" value="56.4444444444444"/>
            <property name="sticky" value="true"/>
            <title>PCB1</title>
            <views>
                <pcbView layer="board">
                    <geometry z="1.5" x="-250" y="284"/>
                </pcbView>
                <breadboardView layer="">
                    <geometry z="0" x="0" y="0"/>
                </breadboardView>
                <schematicView layer="icon">
                    <geometry z="0" x="0" y="0"/>
                </schematicView>
            </views>
        </instance>
        <instance moduleIdRef="ArduinoUnoR3" modelIndex="9167" path="/Applications/Fritzing/parts/core/Arduino_UNO_R3.fzp">
            <title>Arduino2</title>
            <views>
                <breadboardView layer="breadboardbreadboard">
                    <geometry z="1.50001" x="471.166" y="65.1294"/>
                </breadboardView>
                <pcbView layer="copper0">
                    <geometry z="5.5" x="91.2015" y="-302.553"/>
                    <titleGeometry visible="true" x="258.394" y="-309.658" z="12.5" xOffset="167.192" yOffset="-7" textColor="#ffffff" fontSize="5">
                        <displayKey key=""/>
                    </titleGeometry>
                </pcbView>
                <schematicView layer="schematic">
                    <geometry z="2.5" x="-190.964" y="-279.635"/>
                    <titleGeometry visible="true" x="78.4785" y="-294.058" z="5.50003" xOffset="268.65" yOffset="-14" textColor="#000000" fontSize="9">
                        <displayKey key=""/>
                        <displayKey key="part number"/>
                    </titleGeometry>
                </schematicView>
            </views>
        </instance>
        <instance moduleIdRef="Joystick_Shield-v14" modelIndex="9168" path="/Applications/Fritzing/parts/core/Joystick_Shield-v14.fzp">
            <title>Composants2</title>
            <views>
                <breadboardView layer="breadboard">
                    <geometry z="2.5" x="218.25" y="6.75038">
                        <transform m11="0" m12="1" m13="0" m21="-1" m22="0" m23="0" m31="245.25" m32="56.25" m33="1"/>
                    </geometry>
                    <connectors>
                        <connector connectorId="connector29" layer="breadboard">
                            <geometry x="0" y="0"/>
                            <connects>
                                <connect connectorId="connector1" modelIndex="9174" layer="breadboardWire"/>
                            </connects>
                        </connector>
                    </connectors>
                </breadboardView>
                <pcbView layer="copper0">
                    <geometry z="5.50001" x="-104.143" y="85.3025">
                        <transform m11="0" m12="1" m13="0" m21="-1" m22="0" m23="0" m31="245.25" m32="56.25" m33="1"/>
                    </geometry>
                    <titleGeometry visible="true" x="84.8565" y="78.1975" z="12.5" xOffset="189" yOffset="-7" textColor="#ffffff" fontSize="5">
                        <displayKey key=""/>
                    </titleGeometry>
                    <connectors>
                        <connector connectorId="connector29" layer="copper0">
                            <geometry x="0" y="0"/>
                            <connects>
                                <connect connectorId="connector1" modelIndex="9174" layer="copper0trace"/>
                            </connects>
                        </connector>
                    </connectors>
                </pcbView>
                <schematicView layer="schematic">
                    <geometry z="2.50001" x="-32.9335" y="-173.711"/>
                    <titleGeometry visible="true" x="289.757" y="-188.134" z="5.50001" xOffset="321.898" yOffset="-14" textColor="#000000" fontSize="9">
                        <displayKey key=""/>
                        <displayKey key="part number"/>
                    </titleGeometry>
                    <connectors>
                        <connector connectorId="connector29" layer="schematic">
                            <geometry x="0" y="0"/>
                            <connects>
                                <connect connectorId="connector1" modelIndex="9174" layer="schematicTrace"/>
                            </connects>
                        </connector>
                    </connectors>
                </schematicView>
            </views>
        </instance>
        <instance moduleIdRef="5c5090e231dbe30e6bd4b9e2e7949902" modelIndex="9171" path="/Applications/Fritzing/parts/core/loudspeaker.fzp">
            <property name="part number" value="8 OHM SPEAKER"/>
            <title>SPKR1</title>
            <views>
                <breadboardView layer="breadboard">
                    <geometry z="2.50001" x="278.909" y="-148.14"/>
                    <connectors>
                        <connector connectorId="connector0" layer="breadboard">
                            <geometry x="45.0913" y="137.819"/>
                            <leg>
                                <point x="0" y="0"/>
                                <bezier/>
                                <point x="0" y="10.3212"/>
                                <bezier/>
                            </leg>
                            <connects>
                                <connect connectorId="connector1" modelIndex="9193" layer="breadboardWire"/>
                            </connects>
                        </connector>
                        <connector connectorId="connector1" layer="breadboard">
                            <geometry x="54.1263" y="137.819"/>
                            <leg>
                                <point x="0" y="0"/>
                                <bezier/>
                                <point x="0" y="10.3212"/>
                                <bezier/>
                            </leg>
                        </connector>
                    </connectors>
                </breadboardView>
                <schematicView layer="schematic">
                    <geometry z="2.50001" x="211.349" y="-149.271"/>
                    <titleGeometry visible="true" x="318.809" y="-163.271" z="5.5" xOffset="107.46" yOffset="-14" textColor="#000000" fontSize="9">
                        <displayKey key=""/>
                        <displayKey key="part number"/>
                    </titleGeometry>
                    <connectors>
                        <connector connectorId="connector0" layer="schematic">
                            <geometry x="0" y="0"/>
                            <connects>
                                <connect connectorId="connector1" modelIndex="9193" layer="schematicTrace"/>
                            </connects>
                        </connector>
                    </connectors>
                </schematicView>
                <pcbView layer="copper0">
                    <geometry z="5.50002" x="146.7" y="281.7"/>
                    <titleGeometry visible="true" x="159.3" y="274.7" z="12.5" xOffset="12.6" yOffset="-7" textColor="#ffffff" fontSize="5">
                        <displayKey key=""/>
                    </titleGeometry>
                    <connectors>
                        <connector connectorId="connector0" layer="copper0">
                            <geometry x="0" y="0"/>
                            <connects>
                                <connect connectorId="connector1" modelIndex="9193" layer="copper0trace"/>
                            </connects>
                        </connector>
                    </connectors>
                </pcbView>
            </views>
        </instance>
        <instance moduleIdRef="WireModuleID" modelIndex="9174" path=":/resources/parts/core/wire.fzp">
            <title>Wire1</title>
            <views>
                <breadboardView layer="breadboardWire">
                    <geometry z="3.5" x="333" y="36.0059" x1="0" y1="0" x2="4.50025" y2="35.9945" wireFlags="64"/>
                    <wireExtras mils="22.2222" color="#cc1414" opacity="1"/>
                    <connectors>
                        <connector connectorId="connector0" layer="breadboardWire">
                            <geometry x="0" y="0"/>
                            <connects>
                                <connect connectorId="connector1" modelIndex="9205" layer="breadboard"/>
                            </connects>
                        </connector>
                        <connector connectorId="connector1" layer="breadboardWire">
                            <geometry x="0" y="0"/>
                            <connects>
                                <connect connectorId="connector29" modelIndex="9168" layer="breadboard"/>
                            </connects>
                        </connector>
                    </connectors>
                </breadboardView>
                <schematicView layer="schematicTrace">
                    <geometry z="4.5" x="239.174" y="-159.449" x1="0" y1="0" x2="100" y2="100" wireFlags="64"/>
                    <wireExtras mils="33.3333" color="#404040" opacity="1"/>
                    <connectors>
                        <connector connectorId="connector0" layer="schematicTrace">
                            <geometry x="0" y="0"/>
                            <connects>
                                <connect connectorId="connector1" modelIndex="9205" layer="schematic"/>
                            </connects>
                        </connector>
                        <connector connectorId="connector1" layer="schematicTrace">
                            <geometry x="0" y="0"/>
                            <connects>
                                <connect connectorId="connector29" modelIndex="9168" layer="schematic"/>
                            </connects>
                        </connector>
                    </connectors>
                </schematicView>
                <pcbView layer="copper0trace">
                    <geometry z="6.5" x="243" y="-162" x1="0" y1="0" x2="100" y2="100" wireFlags="64"/>
                    <wireExtras mils="11.1111" color="#f28a00" opacity="1"/>
                    <connectors>
                        <connector connectorId="connector0" layer="copper0trace">
                            <geometry x="0" y="0"/>
                            <connects>
                                <connect connectorId="connector1" modelIndex="9205" layer="copper0"/>
                            </connects>
                        </connector>
                        <connector connectorId="connector1" layer="copper0trace">
                            <geometry x="0" y="0"/>
                            <connects>
                                <connect connectorId="connector29" modelIndex="9168" layer="copper0"/>
                            </connects>
                        </connector>
                    </connectors>
                </pcbView>
            </views>
        </instance>
        <instance moduleIdRef="WireModuleID" modelIndex="9193" path=":/resources/parts/core/wire.fzp">
            <title>Wire10</title>
            <views>
                <breadboardView layer="breadboardWire">
                    <geometry z="3.50001" x="225" y="0.5" x1="0" y1="0" x2="99" y2="-0.5" wireFlags="64"/>
                    <wireExtras mils="22.2222" color="#404040" opacity="1"/>
                    <connectors>
                        <connector connectorId="connector1" layer="breadboardWire">
                            <geometry x="0" y="0"/>
                            <connects>
                                <connect connectorId="connector0" modelIndex="9171" layer="breadboard"/>
                            </connects>
                        </connector>
                    </connectors>
                </breadboardView>
                <schematicView layer="schematicTrace">
                    <geometry z="4.50001" x="-26.5748" y="-132.874" x1="0" y1="0" x2="100" y2="100" wireFlags="64"/>
                    <wireExtras mils="33.3333" color="#404040" opacity="1"/>
                    <connectors>
                        <connector connectorId="connector1" layer="schematicTrace">
                            <geometry x="0" y="0"/>
                            <connects>
                                <connect connectorId="connector0" modelIndex="9171" layer="schematic"/>
                            </connects>
                        </connector>
                    </connectors>
                </schematicView>
                <pcbView layer="copper0trace">
                    <geometry z="6.50001" x="-36" y="-135" x1="0" y1="0" x2="100" y2="100" wireFlags="64"/>
                    <wireExtras mils="11.1111" color="#f28a00" opacity="1"/>
                    <connectors>
                        <connector connectorId="connector1" layer="copper0trace">
                            <geometry x="0" y="0"/>
                            <connects>
                                <connect connectorId="connector0" modelIndex="9171" layer="copper0"/>
                            </connects>
                        </connector>
                    </connectors>
                </pcbView>
            </views>
        </instance>
        <instance moduleIdRef="WireModuleID" modelIndex="9196" path=":/resources/parts/core/wire.fzp">
            <title>Wire11</title>
            <views>
                <breadboardView layer="breadboardWire">
                    <geometry z="3.5" x="225" y="0.5" x1="0" y1="0" x2="0" y2="70.5" wireFlags="64"/>
                    <wireExtras mils="22.2222" color="#404040" opacity="1"/>
                </breadboardView>
                <pcbView layer="copper0trace">
                    <geometry z="6.5" x="243" y="-162" x1="0" y1="0" x2="100" y2="100" wireFlags="64"/>
                    <wireExtras mils="11.1111" color="#f28a00" opacity="1"/>
                </pcbView>
                <schematicView layer="schematicTrace">
                    <geometry z="4.5" x="239.174" y="-159.449" x1="0" y1="0" x2="100" y2="100" wireFlags="64"/>
                    <wireExtras mils="33.3333" color="#404040" opacity="1"/>
                </schematicView>
            </views>
        </instance>
        <instance moduleIdRef="5BandResistorModuleID" modelIndex="9205" path="/Applications/Fritzing/parts/core/resistor_5band.fzp">
            <property name="tolerance" value="±1%"/>
            <property name="resistance" value="100"/>
            <property name="pin spacing" value="400 mil"/>
            <property name="power" value=""/>
            <title>R1</title>
            <views>
                <schematicView layer="schematic">
                    <geometry z="2.50002" x="11.1905" y="-77.9505"/>
                    <titleGeometry visible="true" x="26.8893" y="-102.951" z="5.50002" xOffset="15.6988" yOffset="-25" textColor="#000000" fontSize="9">
                        <displayKey key=""/>
                        <displayKey key="part number"/>
                        <displayKey key="resistance"/>
                        <displayKey key="power"/>
                    </titleGeometry>
                    <connectors>
                        <connector connectorId="connector1" layer="schematic">
                            <geometry x="0" y="0"/>
                            <connects>
                                <connect connectorId="connector0" modelIndex="9174" layer="schematicTrace"/>
                            </connects>
                        </connector>
                    </connectors>
                </schematicView>
                <breadboardView layer="breadboard">
                    <geometry z="2.50002" x="312.299" y="13.1811">
                        <transform m11="0" m12="1" m13="0" m21="-1" m22="0" m23="0" m31="24.9997" m32="-14.9999" m33="1"/>
                    </geometry>
                    <connectors>
                        <connector connectorId="connector0" layer="breadboard">
                            <geometry x="4.02871" y="4.29871"/>
                            <leg>
                                <point x="0" y="0"/>
                                <bezier/>
                                <point x="-2.20998" y="0"/>
                                <bezier/>
                            </leg>
                        </connector>
                        <connector connectorId="connector1" layer="breadboard">
                            <geometry x="35.6159" y="4.29871"/>
                            <leg>
                                <point x="0" y="0"/>
                                <bezier/>
                                <point x="2.20873" y="0"/>
                                <bezier/>
                            </leg>
                            <connects>
                                <connect connectorId="connector0" modelIndex="9174" layer="breadboardWire"/>
                            </connects>
                        </connector>
                    </connectors>
                </breadboardView>
                <pcbView layer="copper0">
                    <geometry z="5.50003" x="11.1905" y="-77.9505"/>
                    <titleGeometry visible="true" x="53.9405" y="-84.9505" z="12.5" xOffset="42.75" yOffset="-7" textColor="#ffffff" fontSize="5">
                        <displayKey key=""/>
                    </titleGeometry>
                    <connectors>
                        <connector connectorId="connector1" layer="copper0">
                            <geometry x="0" y="0"/>
                            <connects>
                                <connect connectorId="connector0" modelIndex="9174" layer="copper0trace"/>
                            </connects>
                        </connector>
                    </connectors>
                </pcbView>
            </views>
        </instance>
        <instance moduleIdRef="NoteModuleID" modelIndex="9217" path=":/resources/parts/core/note.fzp">
            <text>&lt;!DOCTYPE HTML PUBLIC &quot;-//W3C//DTD HTML 4.0//EN&quot; &quot;http://www.w3.org/TR/REC-html40/strict.dtd&quot;&gt;
&lt;html&gt;&lt;head&gt;&lt;meta name=&quot;qrichtext&quot; content=&quot;1&quot; /&gt;&lt;style type=&quot;text/css&quot;&gt;
p, li { white-space: pre-wrap; }
&lt;/style&gt;&lt;/head&gt;&lt;body style=&quot; font-family:'Droid Sans'; font-size:9pt; font-weight:400; font-style:normal;&quot;&gt;
&lt;p style=&quot; margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;&quot;&gt;THIS is a simple project that allows you to distort, accelerate, or slow down the tempo of a binary sound via a joystick.&lt;/p&gt;
&lt;p style=&quot; margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;&quot;&gt;The resistor is a 100 ohm.&lt;/p&gt;
&lt;p style=&quot;-qt-paragraph-type:empty; margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;&quot;&gt;&lt;br /&gt;&lt;/p&gt;
&lt;p style=&quot; margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;&quot;&gt;If you push the joystick on the left, you will slow down the tempo.&lt;/p&gt;
&lt;p style=&quot; margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;&quot;&gt;If you push the joystick on the right, you will accelerate the tempo.&lt;/p&gt;
&lt;p style=&quot; margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;&quot;&gt;If you push the joystick up, you will go up in the treble.&lt;/p&gt;
&lt;p style=&quot; margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;&quot;&gt;If you push the joystick down, you will go down in the bass.&lt;/p&gt;
&lt;p style=&quot;-qt-paragraph-type:empty; margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;&quot;&gt;&lt;br /&gt;&lt;/p&gt;
&lt;p style=&quot; margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;&quot;&gt;THE CODE you have to copy and paste into the ARDUINO software is :&lt;/p&gt;
&lt;p style=&quot;-qt-paragraph-type:empty; margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;&quot;&gt;&lt;br /&gt;&lt;/p&gt;
&lt;p style=&quot;-qt-paragraph-type:empty; margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;&quot;&gt;&lt;br /&gt;&lt;/p&gt;
&lt;p style=&quot;-qt-paragraph-type:empty; margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;&quot;&gt;&lt;br /&gt;&lt;/p&gt;
&lt;p style=&quot;-qt-paragraph-type:empty; margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;&quot;&gt;&lt;br /&gt;&lt;/p&gt;
&lt;p style=&quot; margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;&quot;&gt;/*&lt;/p&gt;
&lt;p style=&quot; margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;&quot;&gt;  &lt;/p&gt;
&lt;p style=&quot; margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;&quot;&gt;  JoystickArduinoMelodyControl.pde&lt;/p&gt;
&lt;p style=&quot; margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;&quot;&gt;  &lt;/p&gt;
&lt;p style=&quot; margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;&quot;&gt;  A sketch to demonstrate using a joystick to control the&lt;/p&gt;
&lt;p style=&quot; margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;&quot;&gt;  tempo and pitch of a &amp;quot;melody&amp;quot;.&lt;/p&gt;
&lt;p style=&quot; margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;&quot;&gt;  &lt;/p&gt;
&lt;p style=&quot; margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;&quot;&gt;  (And you thought the standard Melody sketch was annoying!)&lt;/p&gt;
&lt;p style=&quot; margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;&quot;&gt;    &lt;/p&gt;
&lt;p style=&quot; margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;&quot;&gt;  How to use:&lt;/p&gt;
&lt;p style=&quot; margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;&quot;&gt;  &lt;/p&gt;
&lt;p style=&quot; margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;&quot;&gt;    * Connect joystick shield to your Arduino&lt;/p&gt;
&lt;p style=&quot; margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;&quot;&gt;    * Connect piezo buzzer to your Arduino using breadboard and jumper wire&lt;/p&gt;
&lt;p style=&quot; margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;&quot;&gt;        * Positive pin of buzzer to Arduino pin 9&lt;/p&gt;
&lt;p style=&quot; margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;&quot;&gt;        * Other pin of buzzer to Arduino ground (GND) &lt;/p&gt;
&lt;p style=&quot; margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;&quot;&gt;    * Upload this sketch to your Arduino&lt;/p&gt;
&lt;p style=&quot; margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;&quot;&gt;    * Move joystick&lt;/p&gt;
&lt;p style=&quot; margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;&quot;&gt;        * Moving left and right controls the tempo&lt;/p&gt;
&lt;p style=&quot; margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;&quot;&gt;        * Moving up and down controls the pitch&lt;/p&gt;
&lt;p style=&quot; margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;&quot;&gt;  &lt;/p&gt;
&lt;p style=&quot; margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;&quot;&gt;  Requires:&lt;/p&gt;
&lt;p style=&quot; margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;&quot;&gt;  &lt;/p&gt;
&lt;p style=&quot; margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;&quot;&gt;    * Arduino&lt;/p&gt;
&lt;p style=&quot; margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;&quot;&gt;    * SparkFun Joystick Shield&lt;/p&gt;
&lt;p style=&quot;-qt-paragraph-type:empty; margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;&quot;&gt;&lt;br /&gt;&lt;/p&gt;
&lt;p style=&quot; margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;&quot;&gt;  This sketch is a lightly modified version of&amp;lt;http://www.arduino.cc/en/Tutorial/Melody&amp;gt;&lt;/p&gt;
&lt;p style=&quot; margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;&quot;&gt;  for SparkFun Arduino Inventor's Kit CIRC-JOY  &lt;/p&gt;
&lt;p style=&quot;-qt-paragraph-type:empty; margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;&quot;&gt;&lt;br /&gt;&lt;/p&gt;
&lt;p style=&quot; margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;&quot;&gt; */&lt;/p&gt;
&lt;p style=&quot;-qt-paragraph-type:empty; margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;&quot;&gt;&lt;br /&gt;&lt;/p&gt;
&lt;p style=&quot; margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;&quot;&gt;// Store the Arduino pin associated with each axis of the joystick input&lt;/p&gt;
&lt;p style=&quot; margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;&quot;&gt;const byte PIN_ANALOG_X = 0;&lt;/p&gt;
&lt;p style=&quot; margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;&quot;&gt;const byte PIN_ANALOG_Y = 1;&lt;/p&gt;
&lt;p style=&quot;-qt-paragraph-type:empty; margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;&quot;&gt;&lt;br /&gt;&lt;/p&gt;
&lt;p style=&quot;-qt-paragraph-type:empty; margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;&quot;&gt;&lt;br /&gt;&lt;/p&gt;
&lt;p style=&quot; margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;&quot;&gt;const int speakerPin = 2;&lt;/p&gt;
&lt;p style=&quot;-qt-paragraph-type:empty; margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;&quot;&gt;&lt;br /&gt;&lt;/p&gt;
&lt;p style=&quot; margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;&quot;&gt;int length = 15; // the number of notes&lt;/p&gt;
&lt;p style=&quot; margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;&quot;&gt;char notes[] = &amp;quot;ccggaagffeeddc &amp;quot;; // a space represents a rest&lt;/p&gt;
&lt;p style=&quot; margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;&quot;&gt;int beats[] = { 1, 1, 1, 1, 1, 1, 2, 1, 1, 1, 1, 1, 1, 2, 4 };&lt;/p&gt;
&lt;p style=&quot; margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;&quot;&gt;int tempo = 300;&lt;/p&gt;
&lt;p style=&quot;-qt-paragraph-type:empty; margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;&quot;&gt;&lt;br /&gt;&lt;/p&gt;
&lt;p style=&quot; margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;&quot;&gt;void playTone(int tone, int duration) {&lt;/p&gt;
&lt;p style=&quot; margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;&quot;&gt;  for (long i = 0; i &amp;lt; duration * 1000L; i += tone * 2) {&lt;/p&gt;
&lt;p style=&quot; margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;&quot;&gt;    digitalWrite(speakerPin, HIGH);&lt;/p&gt;
&lt;p style=&quot; margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;&quot;&gt;    delayMicroseconds(tone);&lt;/p&gt;
&lt;p style=&quot; margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;&quot;&gt;    digitalWrite(speakerPin, LOW);&lt;/p&gt;
&lt;p style=&quot; margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;&quot;&gt;    delayMicroseconds(tone);&lt;/p&gt;
&lt;p style=&quot; margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;&quot;&gt;  }&lt;/p&gt;
&lt;p style=&quot; margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;&quot;&gt;}&lt;/p&gt;
&lt;p style=&quot;-qt-paragraph-type:empty; margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;&quot;&gt;&lt;br /&gt;&lt;/p&gt;
&lt;p style=&quot; margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;&quot;&gt;void playNote(char note, int duration) {&lt;/p&gt;
&lt;p style=&quot; margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;&quot;&gt;  char names[] = { 'c', 'd', 'e', 'f', 'g', 'a', 'b', 'C' };&lt;/p&gt;
&lt;p style=&quot; margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;&quot;&gt;  int tones[] = { 1915, 1700, 1519, 1432, 1275, 1136, 1014, 956 };&lt;/p&gt;
&lt;p style=&quot;-qt-paragraph-type:empty; margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;&quot;&gt;&lt;br /&gt;&lt;/p&gt;
&lt;p style=&quot; margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;&quot;&gt;  // play the tone corresponding to the note name&lt;/p&gt;
&lt;p style=&quot; margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;&quot;&gt;  for (int i = 0; i &amp;lt; 8; i++) {&lt;/p&gt;
&lt;p style=&quot; margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;&quot;&gt;    if (names[i] == note) {&lt;/p&gt;
&lt;p style=&quot; margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;&quot;&gt;      // We modify the pitch of the note to be played based on the vertical position&lt;/p&gt;
&lt;p style=&quot; margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;&quot;&gt;      // of the joystick:&lt;/p&gt;
&lt;p style=&quot; margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;&quot;&gt;      playTone(tones[i] + map(analogRead(PIN_ANALOG_Y), 0, 1023, 959, -959), duration);&lt;/p&gt;
&lt;p style=&quot; margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;&quot;&gt;    }&lt;/p&gt;
&lt;p style=&quot; margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;&quot;&gt;  }&lt;/p&gt;
&lt;p style=&quot; margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;&quot;&gt;}&lt;/p&gt;
&lt;p style=&quot;-qt-paragraph-type:empty; margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;&quot;&gt;&lt;br /&gt;&lt;/p&gt;
&lt;p style=&quot; margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;&quot;&gt;void setup() {&lt;/p&gt;
&lt;p style=&quot; margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;&quot;&gt;  pinMode(speakerPin, OUTPUT);&lt;/p&gt;
&lt;p style=&quot; margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;&quot;&gt;}&lt;/p&gt;
&lt;p style=&quot;-qt-paragraph-type:empty; margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;&quot;&gt;&lt;br /&gt;&lt;/p&gt;
&lt;p style=&quot; margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;&quot;&gt;void loop() {&lt;/p&gt;
&lt;p style=&quot; margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;&quot;&gt;  for (int i = 0; i &amp;lt; length; i++) {&lt;/p&gt;
&lt;p style=&quot; margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;&quot;&gt;    // We set the tempo based on the horizontal position of the joystick:&lt;/p&gt;
&lt;p style=&quot; margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;&quot;&gt;    tempo = map(analogRead(PIN_ANALOG_X), 0, 1023, 500, 100);&lt;/p&gt;
&lt;p style=&quot; margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;&quot;&gt;    if (notes[i] == ' ') {&lt;/p&gt;
&lt;p style=&quot; margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;&quot;&gt;      delay(beats[i] * tempo); // rest&lt;/p&gt;
&lt;p style=&quot; margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;&quot;&gt;    } else {&lt;/p&gt;
&lt;p style=&quot; margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;&quot;&gt;      playNote(notes[i], beats[i] * tempo);&lt;/p&gt;
&lt;p style=&quot; margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;&quot;&gt;    }&lt;/p&gt;
&lt;p style=&quot;-qt-paragraph-type:empty; margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;&quot;&gt;&lt;br /&gt;&lt;/p&gt;
&lt;p style=&quot; margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;&quot;&gt;    // pause between notes&lt;/p&gt;
&lt;p style=&quot; margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;&quot;&gt;    delay(tempo / 2); &lt;/p&gt;
&lt;p style=&quot; margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;&quot;&gt;  }&lt;/p&gt;
&lt;p style=&quot; margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;&quot;&gt;}&lt;/p&gt;
&lt;p style=&quot;-qt-paragraph-type:empty; margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;&quot;&gt;&lt;br /&gt;&lt;/p&gt;
&lt;p style=&quot;-qt-paragraph-type:empty; margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;&quot;&gt;&lt;br /&gt;&lt;/p&gt;&lt;/body&gt;&lt;/html&gt;</text>
            <views>
                <breadboardView layer="breadboardNote">
                    <geometry z="6.5" x="162" y="269" width="572" height="1104"/>
                </breadboardView>
            </views>
        </instance>
    </instances>
</module>
